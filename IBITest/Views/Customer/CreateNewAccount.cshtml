@model IBITest.Models.NewAccountRequestView

@{
    ViewBag.Title = "CreateNewAccount";
    Layout = "~/Views/Shared/_IBIBankLayout.cshtml";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<script>
    function GetCity(cityName) {
        //$("cityDropDown").val = cityName;
        if (cityName === "")
        {
            //do nothing
            return;
        }
        var url = "/Customer/GetBranchesInCity";
        //alert("You selected city " + cityName);
        $.ajax({
            url: url,
            data: { cityName : cityName },
            cache: false,
            type: "POST",
            success: function (data) {
                $("#branchDropDown").empty();
                
                $("#branchDropDown").append("<option value = '0' >" + "--Select--" + "</option>");
                for (var x = 0; x < data.length; x++) {
                    $("#branchDropDown").append("<option value = '" + data[x].Value + "' >" + data[x].Text + " </option>");
                }
                
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
        
    }
    function onBranchSelect(branchCode)
    {
        alert("You selected branch code "+ branchCode);
    }
</script>
<h2>CreateNewAccount</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>NewAccountRequestView</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.City, new SelectList(@ViewBag.cityList), "--Select--", new { @id="citydropDown", @onchange="javascript:GetCity(this.value)"})
            @Html.ValidationMessageFor(model => model.City)
        </div>
        @*<label for="@(Model.City)" >Select City</label>
        <input type="text" name="@(Model.CustomerID)"/>*@
        <div class="editor-label">
            @Html.LabelFor(model => model.Branch)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Branch, new SelectList(new List<string>()), "--Select--", new { @id="branchDropDown" })
            @Html.ValidationMessageFor(model => model.Branch)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerID)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CustomerID, new {@placeholder="1001",@readonly="true"})
            @Html.ValidationMessageFor(model => model.CustomerID)
        </div>

        @*<label for="@(Model.CustomerID)" >Customer ID</label>
        <textarea name="@(Model.CustomerID)" value="1001"></textarea>*@
        @*<text ></text>
        <textbo name="@(Model.CustomerID)" value="1001"/>*@

        <label for="@(Model.AddresProof)">Address Proof</label>  
        <input type="file" name="@(Model.AddresProof)" id="file"/>

        <p>
            <input type="submit" value="Create New Account" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
