@model IBITest.Models.Customer

@{
    ViewBag.Title = "FinishRegistration";
    Layout = "~/Views/Shared/_IBIBankLayout.cshtml";
}

<h2>FinishRegistration</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Customer</legend>

        @*@Html.HiddenFor(model => model.CustomerID)*@
         <div class="editor-label">
            @Html.LabelFor(model => model.CustomerID)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.CustomerID, new { @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.CustomerID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.CustomerName, new { @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.CustomerName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DOB)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.DOB, new { @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.DOB)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserID)
            @Html.ValidationMessageFor(model => model.UserID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PermanentAddress)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.PermanentAddress, new { @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.PermanentAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CommunicationAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CommunicationAddress)
            @Html.ValidationMessageFor(model => model.CommunicationAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.ContactNumber, new { @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.ContactNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.Email, new { @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TransactionPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TransactionPassword)
            @Html.ValidationMessageFor(model => model.TransactionPassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Token)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.Token, new { @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.Token)
        </div>

        <label for="@(Model.PhotoIDProof)">PhotoID Proof</label>  
        <input type="file" name="@(Model.PhotoIDProof)" id="file"/>
        <p>After Successful registration you will be redirected to Login page</p>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}